#pragma once

namespace openvr
{
    enum ApplicationError
    {
        APPLICATION_ERROR_NONE = 0,

        APPLICATION_ERROR_APP_KEY_ALREADY_EXISTS = 100,
        APPLICATION_ERROR_NO_MANIFEST = 101,
        APPLICATION_ERROR_NO_APPLICATION = 102,
        APPLICATION_ERROR_INVALID_INDEX= 103,
        APPLICATION_ERROR_UNKNOWN_APPLICATION = 104,
        APPLICATION_ERROR_IPC_FAILED = 105,
        APPLICATION_ERROR_ALREADY_RUNNING = 106,
        APPLICATION_ERROR_INVALID_MANIFEST = 107,
        APPLICATION_ERROR_INVALID_APPLICATION = 108,
        APPLICATION_ERROR_LAUNCH_FAILED = 109,
        APPLICATION_ERROR_ALREADY_STARTING = 110,
        APPLICATION_ERROR_LAUNCH_IN_PROGRESS = 111,
        APPLICATION_ERROR_OLD_APPLICATION_QUITTING = 112,
        APPLICATION_ERROR_TRANSITION_ABORTED = 113,
        APPLICATION_ERROR_IS_TEMPLATE = 114,
        APPLICATION_ERROR_STEAMVR_IS_EXITING = 115,

        APPLICATION_ERROR_BUFFER_TOO_SMALL = 200,
        APPLICATION_ERROR_PROPERTY_NOT_SET = 201,
        APPLICATION_ERROR_UNKNOWN_PROPERTY = 202,
        APPLICATION_ERROR_INVALID_PARAMETER = 203,

        APPLICATION_ERROR_NOT_IMPLEMENTED = 300
    };

    enum ApplicationProperty
    {
        APPLICATION_PROPERTY_NAME = 0,
        APPLICATION_PROPERTY_LAUNCH_TYPE = 11,
        APPLICATION_PROPERTY_WORKING_DIRECTORY = 12,
        APPLICATION_PROPERTY_BINARY_PATH = 13,
        APPLICATION_PROPERTY_ARGUMENTS = 14,
        APPLICATION_PROPERTY_URL = 15,
        APPLICATION_PROPERTY_DESCRIPTION = 50,
        APPLICATION_PROPERTY_NEWS_URL = 51,
        APPLICATION_PROPERTY_IMAGE_PATH = 52,
        APPLICATION_PROPERTY_SOURCE = 53,
        APPLICATION_PROPERTY_ACTION_MANIFEST_URL = 54,
        APPLICATION_PROPERTY_IS_DASHBOARD_OVERLAY = 60,
        APPLICATION_PROPERTY_IS_TEMPLATE = 61,
        APPLICATION_PROPERTY_IS_INSTANCED = 62,
        APPLICATION_PROPERTY_IS_INTERNAL = 63,
        APPLICATION_PROPERTY_WANTS_COMPOSITOR_PAUSE_IN_STANDBY = 64,
        APPLICATION_PROPERTY_IS_HIDDEN = 65,
        APPLICATION_PROPERTY_LAST_LAUNCH_TIME = 70
    };

    enum ApplicationState
    {
        APPLICATION_STATE_NONE = 0,
        APPLICATION_STATE_STARTING = 1,
        APPLICATION_STATE_QUITTING = 2,
        APPLICATION_STATE_RUNNING = 3,
        APPLICATION_STATE_WAITING = 4
    };

    enum ApplicationTransitionState
    {
        APPLICATION_TRANSITION_STATE_NONE = 0,
        APPLICATION_TRANSITION_STATE_OLD_APP_QUIT_SENT = 10,
        APPLICATION_TRANSITION_STATE_WAITING_FOR_EXTERNAL_LAUNCH = 11,
        APPLICATION_TRANSITION_STATE_NEW_APP_LAUNCHED = 20
    };

    struct ApplicationOverrideKey
    {
        const char* key;
        const char* value;
    };
}
